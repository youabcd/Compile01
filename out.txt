sqrt
mod
judge_mod
getint
putint
putln
putint
putln
main
_start

fn [9] 0 0 -> 0 {
0: StackAlloc(0)
1: Call(4)
}

fn [0] 4 1 -> 1 {
0: LocA(0)
1: Push(0)
2: Store64
3: LocA(1)
4: ArgA(1)
5: Load64
6: Store64
7: Br(0)
8: LocA(1)
9: Load64
10: LocA(0)
11: Load64
12: SubF
13: Push(4517329193108106637)
14: CmpF
15: SetGt
16: BrTrue(1)
17: Br(47)
18: LocA(2)
19: LocA(0)
20: Load64
21: LocA(1)
22: Load64
23: AddF
24: Push(4611686018427387904)
25: DivF
26: Store64
27: LocA(3)
28: LocA(2)
29: Load64
30: LocA(2)
31: Load64
32: MulF
33: Store64
34: LocA(3)
35: Load64
36: ArgA(1)
37: Load64
38: CmpF
39: Not
40: BrTrue(1)
41: Br(5)
42: ArgA(0)
43: LocA(2)
44: Load64
45: Store64
46: Ret
47: LocA(3)
48: Load64
49: ArgA(1)
50: Load64
51: CmpF
52: SetLt
53: BrTrue(1)
54: Br(5)
55: LocA(0)
56: LocA(2)
57: Load64
58: Store64
59: Br(4)
60: LocA(1)
61: LocA(2)
62: Load64
63: Store64
64: Br(-57)
65: ArgA(0)
66: LocA(2)
67: Load64
68: Store64
69: Ret
}

fn [1] 1 2 -> 1 {
0: LocA(0)
1: ArgA(1)
2: Load64
3: ArgA(2)
4: Load64
5: DivI
6: ItoF
7: FtoI
8: Store64
9: ArgA(0)
10: ArgA(1)
11: Load64
12: ArgA(2)
13: Load64
14: LocA(0)
15: Load64
16: MulI
17: SubI
18: ItoF
19: FtoI
20: Store64
21: Ret
}

fn [2] 0 3 -> 1 {
0: ArgA(2)
1: Load64
2: ArgA(3)
3: Load64
4: CmpI
5: SetGt
6: BrTrue(1)
7: Br(5)
8: ArgA(0)
9: Push(0)
10: Store64
11: Ret
12: Br(20)
13: StackAlloc(1)
14: ArgA(1)
15: Load64
16: ArgA(2)
17: Load64
18: Call(2)
19: Push(0)
20: CmpI
21: Not
22: BrTrue(1)
23: Br(5)
24: ArgA(0)
25: Push(0)
26: Store64
27: Ret
28: Br(4)
29: ArgA(0)
30: Push(1)
31: Store64
32: Ret
}

fn [8] 5 0 -> 0 {
0: LocA(0)
1: StackAlloc(1)
2: CallName(3)
3: Store64
4: LocA(1)
5: Push(2)
6: Store64
7: Br(0)
8: LocA(1)
9: Load64
10: LocA(0)
11: Load64
12: CmpI
13: SetGt
14: Not
15: BrTrue(1)
16: Br(81)
17: StackAlloc(1)
18: LocA(1)
19: Load64
20: Push(2)
21: Call(2)
22: Push(0)
23: CmpI
24: BrTrue(1)
25: Br(65)
26: LocA(4)
27: StackAlloc(1)
28: LocA(1)
29: Load64
30: ItoF
31: Call(1)
32: Store64
33: LocA(3)
34: StackAlloc(1)
35: LocA(1)
36: Load64
37: ItoF
38: Call(1)
39: FtoI
40: Store64
41: LocA(4)
42: Load64
43: FtoI
44: LocA(3)
45: Load64
46: CmpI
47: BrTrue(1)
48: Br(7)
49: StackAlloc(0)
50: Push(1)
51: NegI
52: CallName(4)
53: StackAlloc(0)
54: CallName(5)
55: Ret
56: LocA(2)
57: Push(2)
58: Store64
59: Br(0)
60: StackAlloc(1)
61: LocA(1)
62: Load64
63: LocA(2)
64: Load64
65: LocA(3)
66: Load64
67: Call(3)
68: BrTrue(1)
69: Br(7)
70: LocA(2)
71: LocA(2)
72: Load64
73: Push(1)
74: AddI
75: Store64
76: Br(-17)
77: LocA(2)
78: Load64
79: LocA(3)
80: Load64
81: CmpI
82: SetGt
83: BrTrue(1)
84: Br(6)
85: StackAlloc(0)
86: LocA(1)
87: Load64
88: CallName(6)
89: StackAlloc(0)
90: CallName(7)
91: LocA(1)
92: LocA(1)
93: Load64
94: Push(1)
95: AddI
96: Store64
97: Br(-90)
98: Ret
}


