is_odd
fastpow
getint
getint
getint
putint
putln
main
_start

fn [8] 0 0 -> 0 {
0: StackAlloc(0)
1: Call(3)
}

fn [0] 0 1 -> 1 {
0: ArgA(0)
1: ArgA(1)
2: Load64
3: Push(2)
4: DivI
5: Push(2)
6: MulI
7: ArgA(1)
8: Load64
9: SubI
10: Store64
11: Ret
}

fn [1] 1 2 -> 1 {
0: LocA(0)
1: Push(1)
2: Store64
3: ArgA(2)
4: Load64
5: Push(0)
6: CmpI
7: SetLt
8: BrTrue(1)
9: Br(4)
10: ArgA(0)
11: Push(0)
12: Store64
13: Ret
14: Br(0)
15: Push(1)
16: BrTrue(1)
17: Br(35)
18: StackAlloc(1)
19: ArgA(2)
20: Load64
21: Call(1)
22: BrTrue(1)
23: Br(7)
24: LocA(0)
25: LocA(0)
26: Load64
27: ArgA(1)
28: Load64
29: MulI
30: Store64
31: ArgA(1)
32: ArgA(1)
33: Load64
34: ArgA(1)
35: Load64
36: MulI
37: Store64
38: ArgA(2)
39: ArgA(2)
40: Load64
41: Push(2)
42: DivI
43: Store64
44: ArgA(2)
45: Load64
46: Push(0)
47: CmpI
48: Not
49: BrTrue(1)
50: Br(1)
51: Br(1)
52: Br(-38)
53: ArgA(0)
54: LocA(0)
55: Load64
56: Store64
57: Ret
}

fn [7] 3 0 -> 0 {
0: LocA(2)
1: StackAlloc(1)
2: CallName(2)
3: Store64
4: LocA(2)
5: LocA(2)
6: Load64
7: Push(4)
8: MulI
9: Push(1)
10: AddI
11: Store64
12: Br(0)
13: Push(1)
14: BrTrue(1)
15: Br(48)
16: StackAlloc(1)
17: LocA(2)
18: Load64
19: Call(1)
20: BrTrue(1)
21: Br(8)
22: LocA(2)
23: LocA(2)
24: Load64
25: Push(3)
26: SubI
27: Store64
28: Br(-15)
29: Br(9)
30: LocA(2)
31: Load64
32: Push(0)
33: CmpI
34: SetLt
35: BrTrue(1)
36: Br(2)
37: Br(26)
38: Br(0)
39: LocA(0)
40: StackAlloc(1)
41: CallName(3)
42: Store64
43: LocA(1)
44: StackAlloc(1)
45: CallName(4)
46: Store64
47: StackAlloc(0)
48: StackAlloc(1)
49: LocA(0)
50: Load64
51: LocA(1)
52: Load64
53: Call(2)
54: CallName(5)
55: StackAlloc(0)
56: CallName(6)
57: LocA(2)
58: LocA(2)
59: Load64
60: Push(1)
61: SubI
62: Store64
63: Br(-51)
64: Ret
}


